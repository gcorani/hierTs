dim(rep("thief",resLenght))
dim(as.vector(rep("thief",resLenght)))
dim(matrix(rep("thief",resLenght)))
rbind(matrix(rep("thief",resLenght)),matrix(rep("thief",resLenght)))
dim(rbind(matrix(rep("thief",resLenght)),matrix(rep("thief",resLenght))))
a <- rbind(matrix(results$mseBu/denom), matrix(results$mseBu/denom), matrix(results$mseBu/denom))
dim(a)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght)))
as.data.frame(cbind(relMse,label))
dataPlot <- as.data.frame(cbind(relMse,label))
dataPlot$label <- factor(dataPlot$label)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght)))
dataPlot <- as.data.frame(cbind(relMse,label))
dataPlot$label <- factor(dataPlot$label)
dataPlot <- as.data.frame(cbind(relMse,label))
dataPlot$label <- factor(dataPlot$label)
factor(dataPlot$label)
dataPlot$label
dataPlot
factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(cbind(relMse,label))
plot <- ggplot(dataPlot, aes(x = relMse, y = label)) +
geom_boxplot()
plot
plot <- ggplot(dataPlot, aes(x = label, y = relMse)) +
geom_boxplot()
plot
View(dataPlot)
colnames(dataPlot)<-c("relMse","label")
plot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
plot
View(dataPlot)
factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
summary(dataPlot)
dataPlot$label
class(dataPlot$label)
factor(dataPlot$label)
dataPlot
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
label
dataPlot <- as.data.frame(cbind(relMse,label))
colnames(dataPlot)<-c("relMse","label")
dataPlot
label
f <- data.frame(relMse)
f
f$label <- label
f
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
plot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
plot
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
currentPlot
print(boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)"))
print(ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot() )
dev.off()
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
# currentPlot
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#      ylab="mse(Bayes)", xlim = c(0,1e+9), ylim= c(0,1e+9))
# }
# else if (type=="quarterly"){
#   plot(results$mseThief,results$mseBayes, xlab = "mse (thief)",
#        ylab="mse(Bayes)", xlim = c(0,1e+8), ylim= c(0,1e+8))
# }
# abline(0,1)
# dev.off()
#
#test comparing thief and bayes
wilcoxPval <- wilcox.test(a[,2],a[,3],paired = TRUE, alternative = "greater")
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
# currentPlot
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(log10(relMse))
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(log10(relMse))
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(log10(relMse))
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(log10(relMse))
dataPlot$label <- label
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
boxplot(dataPlot)
summary(dataPlot)
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
summary(relMse)
dataPlot <- as.data.frame(log10(relMse))
summary(dataPlot)
dataPlot <- as.data.frame(log10(relMse))
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(log10(relMse))
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(log10(relMse))
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()
+ scale_x_discrete(name = "Method") + scale_y_continuous(name = "Log (MSE / MSE base) ")
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()  + scale_x_discrete(name = "Method") + scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
logRelMse <- log10(relMse)
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(logRelMse))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(logRelMse))
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
dataPlot <- as.data.frame(logRelMse)
dataPlot$label <- label
summary(dataPlot)
currentPlot <- ggplot(dataPlot, aes(x = label, y = relMse)) + geom_boxplot()  + scale_x_discrete(name = "Method") + scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
library(plotly)
install.packages("plotly")
library(plotly)
diamonds
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
#generate the bplot with ggplot2
library(ggplot2)
library(plotly)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse)) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  scale_y_continuous(name = "Log (MSE / MSE base) "))
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse)) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  scale_y_continuous(name = "Log (MSE / MSE base) "))
library(plotly)
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse)) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  scale_y_continuous(name = "Log (MSE / MSE base) "))
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
scale_x_discrete(name = "Method") +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
library(plotly)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
scale_x_discrete(name = "Method") +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip()
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip() +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse), fill=cond)) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip()
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse), fill=cond)) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip()  +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse), fill=cond)) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip()  +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse), fill=cond)) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip()  +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip()  +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
# boxplot(log10(a),names=c("bu","thief","bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
pdfname <- paste("results/GGPLOTtemporalHier","_",type,"_",fmethod,".pdf",sep = "")
denom <- results$mseBase
resLenght <- length(results$mseThief/denom)
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("bu",resLenght)),matrix(rep("thief",resLenght)),matrix(rep("Bayes",resLenght))))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
scale_x_discrete(name = "Method") +  coord_flip()  +
scale_y_continuous(name = "Log (MSE / MSE base) ")
print(currentPlot)
ggsave(pdfname, width = 4, height = 4)
ggsave(pdfname, width = 4, height = 3)
parseM3Results()
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
parseM3Results()
parseM3Results(fmethod = "arima")
parseM3Results(fmethod = "ets")
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
parseM3Results(fmethod = "ets")
parseM3Results(fmethod = "arima")
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
parseM3Results(fmethod = "arima")
b<-parseM3Results(fmethod = "ets")
b<-parseM3Results(fmethod = "ets", type = "quarterly")
b<-parseM3Results(fmethod = "arima", type = "quarterly")
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
stat_boxplot(geom = "errorbar", width = 0.5) +  #draw the whiskers
scale_x_discrete(name = "Method") +
scale_y_continuous(name = "Log (MSE / MSE base) ")
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
b<-parseM3Results(fmethod = "arima", type = "quarterly")
b<-parseM3Results(fmethod = "ets", type = "quarterly")
b<-parseM3Results(fmethod = "ets", type = "monthly")
b<-parseM3Results(fmethod = "arima", type = "monthly")
b<-parseM3Results(fmethod = "arima", type = "weekly")
?relevel
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
b<-parseM3Results(fmethod = "arima", type = "monthly")
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
b<-parseM3Results(fmethod = "arima", type = "monthly")
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
b<-parseM3Results(fmethod = "arima", type = "monthly")
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseM3results.R')
b<-parseM3Results(fmethod = "arima", type = "monthly")
b<-parseM3Results(fmethod = "ets", type = "monthly")
b<-parseM3Results(fmethod = "ets", type = "quarterly")
b<-parseM3Results(fmethod = "arima", type = "quarterly")
b<-parseM3Results(fmethod = "arima", type = "weekly")
parseHierResults()\
parseHierResults()
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseHierResults.R')
#parse the results of hierarchical non-temporal reconciliation
#readt the mse, extract the proportion of favorable signs and the produces the boxplot
library(readr)
results <- read_csv("results/mseHierReconc.csv")
fmethods <- unique(results$fmethod)
dsets <- unique(results$dset)
configs <- length(fmethods) * length(dsets)
#the 7 fields are fmethod, dset, prop against each method
favorableProps <- matrix(nrow = configs, ncol = 7)
colnames(favorableProps) <- c("dset","fmethod","propBeatBase","propBeatBu","propBeatComb",
"propBeatCombWls","propBeatMint")
counter <- 1
dset <- "infantgts"
fmethod <- "ets"
favorableProps[counter,"dset"] <- dset
favorableProps[counter,"fmethod"] <- fmethod
idx = results$fmethod==fmethod & results$dset==dset
if (sum(idx)>0){
subresults <- results[idx,]
favorableProps[counter,"propBeatBase"] <- mean (subresults$mseBase>subresults$mseBayes)
favorableProps[counter,"propBeatBu"] <- mean (subresults$mseBu>subresults$mseBayes)
favorableProps[counter,"propBeatComb"] <- mean (subresults$mseComb>subresults$mseBayes)
favorableProps[counter,"propBeatCombWls"] <- mean (subresults$mseCombWls>subresults$mseBayes)
favorableProps[counter,"propBeatMint"] <- mean (subresults$mseCombMint>subresults$mseBayes)
#generate the bplot
pdfname <- paste("results/hier","_",dset,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- subresults$mseBase
a <-  cbind(subresults$mseBu/denom, subresults$mseComb/denom, subresults$mseCombWls/denom, subresults$mseCombMint/denom, subresults$mseBayes/denom)
boxplot(log10(a),names=c("bu","comb","combWLS","mint","Bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOThier","_",dset,"_",fmethod,".pdf",sep = "")
denom <- results$mseBase
relMse <- rbind(matrix(results$mseBu/denom), matrix(results$mseThief/denom), matrix(results$mseBayes/denom))
label <-  factor(rbind(matrix(rep("Bu",resLenght)),matrix(rep("Thief",resLenght)),matrix(rep("Bayes",resLenght))),
levels = c("Bu","Thief","Bayes"))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
stat_boxplot(geom = "errorbar", width = 0.5) +  #draw the whiskers
scale_x_discrete(name = "") +
scale_y_continuous(name = "Log10 (MSE / MSE base) ")
print(currentPlot)
ggsave(pdfname, width = 4, height = 3)
counter <- counter + 1
}
favorableProps[counter,"dset"] <- dset
favorableProps[counter,"fmethod"] <- fmethod
idx = results$fmethod==fmethod & results$dset==dset
idx
subresults <- results[idx,]
favorableProps[counter,"propBeatBase"] <- mean (subresults$mseBase>subresults$mseBayes)
favorableProps[counter,"propBeatBu"] <- mean (subresults$mseBu>subresults$mseBayes)
favorableProps[counter,"propBeatComb"] <- mean (subresults$mseComb>subresults$mseBayes)
favorableProps[counter,"propBeatCombWls"] <- mean (subresults$mseCombWls>subresults$mseBayes)
favorableProps[counter,"propBeatMint"] <- mean (subresults$mseCombMint>subresults$mseBayes)
#generate the bplot
pdfname <- paste("results/hier","_",dset,"_",fmethod,".pdf",sep = "")
pdf(pdfname)
denom <- subresults$mseBase
a <-  cbind(subresults$mseBu/denom, subresults$mseComb/denom, subresults$mseCombWls/denom, subresults$mseCombMint/denom, subresults$mseBayes/denom)
boxplot(log10(a),names=c("bu","comb","combWLS","mint","Bayes"), outline=TRUE, ylab="Relative MSE (log10)")
dev.off()
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOThier","_",dset,"_",fmethod,".pdf",sep = "")
denom <- subresults$mseBase
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseHierResults.R')
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOThier","_",dset,"_",fmethod,".pdf",sep = "")
denom <- subresults$mseBase
relMse <- rbind(matrix(subresults$mseBu/denom), matrix(subresults$mseComb/denom), matrix(subresults$mseCombWls/denom),
matrix(subresults$mseCombMint/denom), matrix(results$mseBayes/denom))
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseHierResults.R')
relMse <- rbind(matrix(subresults$mseBu/denom), matrix(subresults$mseComb/denom), matrix(subresults$mseCombWls/denom),
matrix(subresults$mseCombMint/denom), matrix(subresults$mseBayes/denom))
relMse
dim(relMse)
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseHierResults.R')
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOThier","_",dset,"_",fmethod,".pdf",sep = "")
denom <- subresults$mseBase
resLenght <- length(results$mseBase)
relMse <- rbind(matrix(subresults$mseBu/denom), matrix(subresults$mseComb/denom), matrix(subresults$mseCombWls/denom),
matrix(subresults$mseCombMint/denom), matrix(subresults$mseBayes/denom))
relMse
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseHierResults.R')
#generate the bplot with ggplot2
library(ggplot2)
pdfname <- paste("results/GGPLOThier","_",dset,"_",fmethod,".pdf",sep = "")
denom <- subresults$mseBase
resLenght <- length(results$mseBase)
relMse <- rbind(matrix(subresults$mseBu/denom), matrix(subresults$mseComb/denom), matrix(subresults$mseCombWls/denom),
matrix(subresults$mseCombMint/denom), matrix(subresults$mseBayes/denom))
label <-  factor(rbind(matrix(rep("Bu",resLenght)),matrix(rep("Comb",resLenght)),matrix(rep("CombWls",resLenght)),
matrix(rep("Mint",resLenght)),matrix(rep("Bayes",resLenght))),
levels = c("Bu","Comb","CombWls","Mint","Bayes"))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
dataPlot <- as.data.frame(relMse)
dim(dataPlot)
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseHierResults.R')
pdfname <- paste("results/GGPLOThier","_",dset,"_",fmethod,".pdf",sep = "")
denom <- subresults$mseBase
resLenght <- length(subresults$mseBase)
relMse <- rbind(matrix(subresults$mseBu/denom), matrix(subresults$mseComb/denom), matrix(subresults$mseCombWls/denom),
matrix(subresults$mseCombMint/denom), matrix(subresults$mseBayes/denom))
label <-  factor(rbind(matrix(rep("Bu",resLenght)),matrix(rep("Comb",resLenght)),matrix(rep("CombWls",resLenght)),
matrix(rep("Mint",resLenght)),matrix(rep("Bayes",resLenght))),
levels = c("Bu","Comb","CombWls","Mint","Bayes"))
dataPlot <- as.data.frame(relMse)
dataPlot$label <- label
currentPlot <- ggplot(dataPlot, aes(x = label, y = log10(relMse))) + geom_boxplot()  +
stat_boxplot(geom = "errorbar", width = 0.5) +  #draw the whiskers
scale_x_discrete(name = "") +
scale_y_continuous(name = "Log10 (MSE / MSE base) ")
print(currentPlot)
ggsave(pdfname, width = 4, height = 3)
parseHierResults()
source('~/switchDrive/hierTs/hierarchicalTimeSeries/code/hierTs/parseHierResults.R')
parseHierResults()
